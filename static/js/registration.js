document.addEventListener("DOMContentLoaded", function () {
    // –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ showRegistration –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const regButton = document.getElementById("regButton");
    if (regButton) {
        regButton.addEventListener("click", function () {
            showRegistration();
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ showLogin –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const loginButton = document.getElementById("loginButton");
    if (loginButton) {
        loginButton.addEventListener("click", function () {
            showLogin();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registrationForm = document.getElementById("registrationForm");
    if (registrationForm) {
        registrationForm.addEventListener("submit", async function (e) {
            e.preventDefault();
            console.log("–§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");

            const firstName = document.getElementById("firstName").value.trim();
            const lastName = document.getElementById("lastName").value.trim();
            const age = parseInt(document.getElementById("age").value);
            const gender = document.getElementById("gender").value;
            const email = document.getElementById("email").value.trim();
            const englishLevel = document.getElementById("englishLevel").value;
            const password = document.getElementById("password").value.trim();
            const confirmPassword = document.getElementById("confirmPassword").value.trim();
            const hobby = document.getElementById("hobby").value;
            const specification = document.getElementById("specification").value;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
            if (password !== confirmPassword) {
                alert("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!");
                return;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤—ã–±—Ä–∞–Ω—ã
            if (!hobby) {
                alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ–±–±–∏");
                return;
            }

            if (!specification) {
                alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è");
                return;
            }

            // –í—ã–≤–æ–¥ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö
            console.log("–•–æ–±–±–∏:", hobby);
            console.log("–¶–µ–ª—å:", specification);

            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            const data = {
                first_name: firstName,
                last_name: lastName,
                age: age,
                sex: gender === "male" ? "M" : gender === "female" ? "F" : "O",
                email: email,
                level: englishLevel,
                password: password,
                teacher_id: 1, // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                vocabulary: 0,  // –ù–∞—á–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å
                hobby: hobby,      // –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–æ—Ä–º—ã
                specification: specification // –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–æ—Ä–º—ã
            };

            console.log("‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:", JSON.stringify(data));

            try {
                console.log("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...");
                const response = await fetch("/api/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                // –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–≤–µ—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                console.log("üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
                console.log("üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:", Object.fromEntries([...response.headers.entries()]));

                if (response.ok) {
                    const result = await response.json();
                    console.log("‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:", result);
                    alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!");
                    window.location.href = "login.html"; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                } else {
                    console.log("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –°—Ç–∞—Ç—É—Å:", response.status);
                    let errorMessage = "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ";
                    try {
                        const errorData = await response.json();
                        console.error("‚ùå –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ (JSON):", errorData);

                        if (errorData.detail) {
                            errorMessage += errorData.detail;
                        } else if (errorData.message) {
                            errorMessage += errorData.message;
                        } else {
                            errorMessage += JSON.stringify(errorData);
                        }
                    } catch (jsonError) {
                        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
                        console.error("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON –æ—Ç–≤–µ—Ç–∞:", jsonError);
                        const textResponse = await response.text();
                        console.error("üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç:", textResponse);
                        errorMessage += textResponse || `–ö–æ–¥ –æ—à–∏–±–∫–∏: ${response.status}`;
                    }
                    alert(errorMessage);
                }
            } catch (error) {
                console.error("üî¥ –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:", error);
                alert("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        });
    } else {
        console.error("‚ùå –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ!");
    }
});
