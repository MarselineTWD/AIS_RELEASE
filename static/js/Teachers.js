document.addEventListener('DOMContentLoaded', async function() {
    await loadTeachers();
    
    const token = localStorage.getItem('token');
    if (token) {
        try {
            const userData = await fetchUserData(token);
            updateUIforLoggedInUser(userData);
            await loadRoleSpecificData(userData.role, token);
        } catch (error) {
            console.error('Error loading user data:', error);
            if (error.status === 401) {
                localStorage.removeItem('token');
                updateUIforGuest();
            }
        }
    } else {
        updateUIforGuest();
    }
});

async function loadTeachers() {
    try {
        const response = await fetch('/api/teachers/public');
        const teachers = await response.json();
        displayTeachers(teachers);
    } catch (error) {
        console.error('Error loading teachers:', error);
        document.getElementById('teachersList').innerHTML = 
            '<div class="text-red-500">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div>';
    }
}

function displayTeachers(teachers) {
    const teachersList = document.getElementById('teachersList');
    if (teachers.length === 0) {
        teachersList.innerHTML = `
            <div class="teacherlist-text">
                <span class="empty-icon">üìö</span>
                –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.
            </div>`;
        return;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
    function getAgeString(age) {
        const lastDigit = age % 10;
        const lastTwoDigits = age % 100;

        if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {
            return `${age} –ª–µ—Ç`;
        } else if (lastDigit === 1) {
            return `${age} –≥–æ–¥`;
        } else if (lastDigit >= 2 && lastDigit <= 4) {
            return `${age} –≥–æ–¥–∞`;
        } else {
            return `${age} –ª–µ—Ç`;
        }
    }

    teachersList.innerHTML = teachers.map((teacher, index) => `
        <div class="teacherlist-show" style="animation-delay: ${index * 0.1}s;">
            <div class="teacherlist-header">
                <span class="teacher-icon">üë©‚Äçüè´</span>
                <h3 class="teacher-name">${teacher.first_name} ${teacher.last_name}</h3>
            </div>
            <div class="teacherlist-details">
                <p class="teacherlist-show-p">
                    <span class="detail-icon">üéì</span> 
                    ${teacher.qualification || '–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
                </p>
                <p class="teacherlist-show-p">
                    <span class="detail-icon">‚úâÔ∏è</span> 
                    ${teacher.email}
                </p>
                <p class="teacherlist-show-p">
                    <span class="detail-icon">üéÇ</span> 
                    ${getAgeString(teacher.age)}
                </p>
                <p class="teacherlist-show-p">
                    <span class="detail-icon">${teacher.sex === 'M' ? 'üë®' : 'üë©'}</span> 
                    ${teacher.sex === 'M' ? '–ú' : '–ñ'}
                </p>
            </div>
        </div>
    `).join('');
}

fetch('static/header.html')
    .then(response => response.text())
    .then(data => {
        document.getElementById('header-container').innerHTML = data;
        })
    .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ—É—Ç–µ—Ä–∞:', error));
    
fetch('static/footer.html')
    .then(response => response.text())
    .then(data => {
        document.getElementById('footer-container').innerHTML = data;
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ—É—Ç–µ—Ä–∞:', error));
